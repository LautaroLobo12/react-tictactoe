{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","window","status","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","current","winner","moves","map","ste","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"iPAIA,SAASA,EAAOC,GACZ,OACE,4BACEC,UAAU,SACVC,QAASF,EAAME,SAEdF,EAAMG,O,IAKTC,E,2KAESC,GAAI,IAAD,OACd,OACE,kBAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMtC,OACE,6BACE,yBAAKJ,UAAU,UAAUO,OAAOC,QAChC,yBAAKR,UAAU,aACZK,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,IAErB,yBAAKT,UAAU,aACZK,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,IAErB,yBAAKT,UAAU,aACZK,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,S,GA5BTC,IAAMC,WAmCpBC,E,kDA0BJ,WAAYb,GAAO,IAAD,8BAChB,cAAMA,IACDc,MAAQ,CACXC,QAAS,CAAC,CACRR,QAASS,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPK,E,wDAxBNd,GACV,IAAMU,EAAUT,KAAKQ,MAAMC,QAAQK,MAAM,EAAGd,KAAKQ,MAAMI,WAAa,GAE9DX,EADUQ,EAAQA,EAAQM,OAAS,GACjBd,QAAQa,QAC5BE,EAAgBf,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKQ,MAAMK,QAAU,IAAM,IACxCb,KAAKiB,SAAS,CACZR,QAAUA,EAAQS,OAAO,CAAC,CACxBjB,QAASA,KAEbW,WAAYH,EAAQM,OACpBF,SAAUb,KAAKQ,MAAMK,a,6BAIhBM,GACLnB,KAAKiB,SAAS,CACZL,WAAYO,EACZN,QAAUM,EAAK,IAAO,Q,8CAehB,IAkBJhB,EAlBG,OAEDM,EAAUT,KAAKQ,MAAMC,QACrBW,EAAUX,EAAQT,KAAKQ,MAAMI,YAC7BS,EAASL,EAAgBI,EAAQnB,SAEjCqB,EAAQb,EAAQc,KAAI,SAACC,EAAKC,GAC9B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBAEF,OACE,wBAAIE,IAAKF,GACP,4BAAQ7B,QAAW,kBAAI,EAAKgC,OAAOH,KAAQC,OAYjD,OALEvB,EADEkB,EACO,WAAaA,EAEb,iBAAmBrB,KAAKQ,MAAMK,QAAU,IAAM,KAIvD,yBAAKlB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEG,QAAWmB,EAAQnB,QACnBL,QAAW,SAACG,GAAD,OAAO,EAAK8B,YAAY9B,OAGvC,yBAAKJ,UAAU,aACb,6BAAMQ,GACN,4BAAKmB,S,GAxEIjB,IAAMC,WA+EzB,SAASU,EAAgBf,GAWvB,IAVA,IAAM6B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA/B,EAAI,EAAGA,EAAI+B,EAAMf,OAAQhB,IAAK,CAAC,IAAD,cACnB+B,EAAM/B,GADa,GAC9BgC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIhC,EAAQ8B,IAAM9B,EAAQ8B,KAAO9B,EAAQ+B,IAAM/B,EAAQ8B,KAAO9B,EAAQgC,GACpE,OAAOhC,EAAQ8B,GAGnB,OAAO,KAKTG,IAASC,OACP,kBAAC5B,EAAD,MACA6B,SAASC,eAAe,W","file":"static/js/main.bf3a3657.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n      <button \n        className=\"square\" \n        onClick={props.onClick} \n      >\n        {props.value}\n      </button>\n    );\n}\n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    return (\n      <Square \n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"status\">{window.status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n\n  handleClick(i){\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history : history.concat([{\n        squares: squares,\n      }]),\n    stepNumber: history.length,\n    xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step){\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step%2) === 0,\n    });\n  }\n\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  render() {\n\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((ste, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n\n      return (\n        <li key={move}>\n          <button onClick = {()=>this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares = {current.squares}\n            onClick = {(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}